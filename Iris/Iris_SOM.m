% Solve a Clustering Problem with a Self-Organizing Map
% Script generated by Neural Clustering app
% Created 21-May-2021 10:15:01
%
% This script assumes these variables are defined:
%
%   irisInputs - input data.
load fisheriris.mat
%load iris_dataset.mat

x = meas';

%% Create a Self-Organizing Map
dimension1 = 10;
dimension2 = 10;
net = selforgmap([dimension1 dimension2]);

%% Train the Network
[net,tr] = train(net,x);

%% View the Network
view(net)

%% Test the Network
y = net(x);

classes = vec2ind(y)';

clusterLabels = cell(dimension1 * dimension2, 1);
for i = 1 : dimension1 * dimension2
    elementIdsInClass = find(classes == i);
    if isempty(elementIdsInClass)
        continue;
    end
    
    % Mode for cellstr
    u = unique(species(elementIdsInClass));
    frequencies = zeros(length(u), 1);
    for j = 1 : length(u)
        frequencies(j) = length(strcmp(species(elementIdsInClass), u{j}));
    end
    [~, id] = max(frequencies);
    clusterLabels{i} = u{id};
end

%%

tmp = strcmp(clusterLabels(classes), species);
results = sum(strcmp(clusterLabels(classes), species)) / length(species);



% Plots
% Uncomment these lines to enable various plots.
%figure, plotsomtop(net)
%figure, plotsomnc(net)
%figure, plotsomnd(net)
%figure, plotsomplanes(net)
%figure, plotsomhits(net,x)
%figure, plotsompos(net,x)